*{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body{
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
}

.container{
  width: 500px;
  background-color: #333;
  color: white;
  padding: 20px;
  border-radius: 10px;
  /* x, y, 블러, 스프레드, 그림자 색깔 */
  box-shadow: 0 0 50px rgba(0, 0, 0, 0.4);
  margin: 0 auto;
  h1{
    text-align: center;
    text-transform: uppercase;
    font-size: 40px;
    margin-bottom: 40px;
  }
  .item{
    article{
      margin-bottom: 5px;
      &:first-child{
        display: flex;
        justify-content: space-between;
        align-items: center;
      }
    }
    .progress{
      border: 1px solid #6cd4c4;
      padding: 5px;
      border-radius: 3px;
      .progress-level{
        width: 0;
        height: 10px;
        background: linear-gradient(to right, #fa709a, #fee140);
        animation : ani 0.8s linear;
        /* 애니메이션이 종료되면 그 이후 모든 히스토리를 지워줌. (쿠키삭제와 비슷하게, 애니메이션이 원래 한번되면 완성된 상태에서 리셋이 되는데, 이를 방지하기 위해 완전히 끊고 처음부터 다시 시작하도록 하는 속성) */
        animation-fill-mode: both;
      }
    }
  }
}

/* 동일한 형태를 가지고 있는 요소들부터 셈 */
.container > .item:nth-of-type(1) .progress-level{
  width: 90%;
  animation-delay: 0s;
}
.container > .item:nth-of-type(2) .progress-level{
  width: 80%;
  animation-delay: 0.2s;
}
.container > .item:nth-of-type(3) .progress-level{
  width: 65%;
  animation-delay: 0.4s;
}
.container > .item:nth-of-type(4) .progress-level{
  width: 70%;
  animation-delay: 0.6s;
}
.container > .item:nth-of-type(5) .progress-level{
  width: 82%;
  animation-delay: 0.8s;
}

@keyframes ani {
  0%{
    width: 0;
  }
}
