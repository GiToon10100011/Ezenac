//숫자만 가능한 정규표현식 패턴
//숫자뿐만아니라 문자까지도 포함해서 가정하므로 숫자클래스를 사용하지 않음.
const regexp = /^[0-9]+$/;
//양의 정수만 가능한 정규표현식 패턴
//정수는 숫자만을 정수로 간주하기 때문에 숫자클래스를 반드시 사용함.
const regexp2 = /^[1-9]\d*$/;
//음의 정수만 가능한 정규표현식 패턴
//숫자는 한번만 써도 의미가 있으므로 반복되지 않아도 반환해주는 *를 사용하는데, 결국 문자도 정석대로 하고자 한다면 *를 쓰는것이 그럼 옳다.
const regexp3 = /^\-[1-9]\d*$/;
//영문자를 찾아오도록 하는 정규표현식 패턴
const regexp4 = /^[a-zA-Z]+$/;
//숫자와 영문자를 찾아오도록 하는 정규표현식 패턴
const regexp5 = /^[a-zA-Z0-9]+$/
//한글만 찾아오도록 하는 정규표현식 패턴
const regexp6 = /^[가-힣]+$/
//한글과 영문자만 가능한 정규표현식 패턴
const regexp7 = /^[가-힣a-zA-Z]+$/
//문자열의 길이가 5~10개의 패턴
const regexp8 = /^.{5,10}$/
